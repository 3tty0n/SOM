Universe = (
  | symbolTable |
  initialize = (
    symbolTable := Dictionary new.
  )

  symbolFor: aString = (
    | result |
    result := symbolTable at: aString.
    result == nil ifFalse: [
      ^ result ].

    ^ self newSymbol: aString
  )

  newSymbol: aString = (
    | result |
    result := SSymbol new: aString.
    symbolTable at: aString put: result.
    ^ result
  )

  newInteger: anInteger = (
    ^ SInteger for: anInteger
  )

  newDouble: aDouble = (
    ^ SDouble for: aDouble
  )

  newString: aString = (
    ^ SString new: aString
  )

  ----

  new = (
    ^ super new initialize
  )
)
