StringPrimitives = Primitives (

  installPrimitives = (
    self installInstancePrimitive: (
      SPrimitive new: 'concatenate:' in: universe with: [:frame :interp |
        | rcvr argument |
        argument := frame pop.
        rcvr := frame pop.

        frame push: (universe newString: rcvr string + argument string) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'asSymbol' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (universe symbolFor: rcvr string) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'length' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (universe newInteger: rcvr string length) ]).

    self installInstancePrimitive: (
      SPrimitive new: '=' in: universe with: [:frame :interp |
        | rcvr argument |
        argument := frame pop.
        rcvr := frame pop.

        frame push: ((argument somClassIn: universe) and: [rcvr string = argument string]) == universe stringClass
          ifTrue: [ universe trueObject ]
          ifFalse: [ universe falseObject ] ]).

    self installInstancePrimitive: (
      SPrimitive new: 'primSubstringFrom:to:' in: universe with: [:frame :interp |
        | rcvr from to |
        to := frame pop.
        from := frame pop.
        rcvr := frame pop.

        frame push: (universe newString: (rcvr string primSubstringFrom: from integer to: to integer)) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'hashcode' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (universe newInteger: rcvr string hashcode) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'isWhiteSpace' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (rcvr string isWhiteSpace
          ifTrue: [ universe trueObject ]
          ifFalse: [ universe falseObject ] ) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'isLetters' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (rcvr string isLetters
          ifTrue: [ universe trueObject ]
          ifFalse: [ universe falseObject ] ) ]).

    self installInstancePrimitive: (
      SPrimitive new: 'isDigits' in: universe with: [:frame :interp |
        | rcvr |
        rcvr := frame pop.
        frame push: (rcvr string isDigits
          ifTrue: [ universe trueObject ]
          ifFalse: [ universe falseObject ] ) ]).
  )

  ----

  new: universe = (
    ^ self new initialize: universe
  )
)
