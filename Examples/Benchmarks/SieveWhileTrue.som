SieveWhileTrue = Benchmark (
    benchmark = (
        | flags |
        flags  := Array new: 5000.
        ^ self sieve: flags size: 5000.
    )

    verifyResult: result = (
      ^ self assert: 669 equals: result
    )

    sieve: flags size: size = (
        | primeCount i |
        primeCount := 0.
        flags putAll: true.
        i := 2.
        [ i <= size ] whileTrue: [
           (flags at: i - 1)
                ifTrue: [
                    | k |
                    primeCount := primeCount + 1.
                    k := i + i.
                    [ k <= size ] whileTrue: [ flags at: k - 1 put: false. k := k + i ]
                ].
           i := i + 1. ].
        ^primeCount
    )

    runSieve: flags size: size = (^ self sieve: flags size: size )
)
